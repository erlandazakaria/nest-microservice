version: '3.9'

networks:
  nest-network:
    name: "nest-network"
    driver: bridge

services:
  mongo:
    container_name: mongo
    image: mongo:focal
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=nest-microservice
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - nest-network
    ports:
      - 9090:27017
    
  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: 'true'
    networks:
      - nest-network
    ports:
      - 2181:2181
  
  kafka:
    container_name: kafka
    image: bitnami/kafka:latest
    depends_on:
      - zookeeper
    networks:
      - nest-network
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: 'true'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CLIENT_USERS: user
      KAFKA_CLIENT_PASSWORDS: password
  
  kafkadrop:
    container_name: kafkadrop
    image: obsidiandynamics/kafdrop
    restart: "no"
    networks:
      - nest-network
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - "kafka"

  s-nest-api:
    container_name: c-nest-api
    build: 
      context: ./api-gateway
    networks:
      - nest-network
    ports:
      - 3000:3000
    image: nest-micro-api:1.0.0
    restart: unless-stopped
    depends_on:
      - "kafka"
      - "mongo"

  s-nest-billing:
    container_name: c-nest-billing
    build: 
      context: ./billing
    networks:
      - nest-network
    image: nest-micro-billing:1.0.0
    restart: unless-stopped
    depends_on:
      - "kafka"
      - "mongo"

  s-nest-product:
    container_name: c-nest-product
    build: 
      context: ./product
    networks:
      - nest-network
    image: nest-micro-product:1.0.0
    restart: unless-stopped
    depends_on:
      - "kafka"
      - "mongo"

  s-nest-user:
    container_name: c-nest-user
    build: 
      context: ./user
    networks:
      - nest-network
    image: nest-micro-user:1.0.0
    restart: unless-stopped
    depends_on:
      - "kafka"
      - "mongo"
